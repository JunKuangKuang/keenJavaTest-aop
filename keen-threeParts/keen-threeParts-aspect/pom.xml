<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <artifactId>keen-threeParts-aspect</artifactId>
    <groupId>xyz.clzly</groupId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <disruptor.version>3.4.4</disruptor.version>
        <log4j-slf4j-impl.version>2.15.0</log4j-slf4j-impl.version>
    </properties>

    <dependencies>
        <!--切面依赖-->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.8.13</version>
        </dependency>

        <!--对外Api包，是一种日志框架，单独的话缺少实现无法应用-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.36</version>
        </dependency>

        <!--异步依赖,需要使用log4j2的AsyncLogger需要包含disruptor-->
<!--        <dependency>-->
<!--            <groupId>com.lmax</groupId>-->
<!--            <artifactId>disruptor</artifactId>-->
<!--            <version>${disruptor.version}</version>-->
<!--        </dependency>-->

<!--        &lt;!&ndash;桥接包log4j-slf4j-impl起到适配的作用，版本须对应log4j-core的版本&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.apache.logging.log4j</groupId>-->
<!--            <artifactId>log4j-slf4j-impl</artifactId>-->
<!--            <version>${log4j-slf4j-impl.version}</version>-->
<!--        </dependency>-->

        <!--JSON序列化依赖-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.75</version>
        </dependency>
    </dependencies>

<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-shade-plugin</artifactId>-->
<!--                <version>3.2.1</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>shade</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            &lt;!&ndash;保留原项目的jar包和pom.xml&ndash;&gt;-->
<!--                            <shadedArtifactAttached>true</shadedArtifactAttached>-->
<!--                            &lt;!&ndash;指定尾缀&ndash;&gt;-->
<!--                            <shadedClassifierName>keen-jar-with-dependencies</shadedClassifierName>-->
<!--                            &lt;!&ndash;在打包过程中对文件进行处理&ndash;&gt;-->
<!--                            <transformers>-->
<!--&lt;!&ndash;                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">&ndash;&gt;-->
<!--&lt;!&ndash;                                    &lt;!&ndash;指定程序入口，MANIFEST.MF中的Main-Class&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;                                    <mainClass>xyz.clzly.keen.date.KeenDate</mainClass>&ndash;&gt;-->
<!--&lt;!&ndash;                                </transformer>&ndash;&gt;-->
<!--                                &lt;!&ndash;如果多个jar包在META-INF文件夹下含有相同的文件，那么需要将他们合并到一个文件里&ndash;&gt;-->
<!--                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">-->
<!--                                    <resource>META-INF/aop.xml</resource>-->
<!--                                </transformer>-->

<!--                            </transformers>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->
</project>